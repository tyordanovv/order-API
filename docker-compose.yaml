version: '2.1'

services:
  product:
    container_name: product-service
    build: product-service
    mem_limit: 200m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodb:
        condition: service_healthy

  delivery:
    container_name: delivery-service
    build: delivery-service
    mem_limit: 200m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/delivery
      - APP_EUREKA-SERVER=eureka

  email:
    container_name: email-service
    build: email-service
    mem_limit: 200m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - APP_EUREKA-SERVER=eureka


  order:
    container_name: order-service
    build: order-service
    mem_limit: 200m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/order
      - APP_EUREKA-SERVER=eureka
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres
    container_name: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - PGDATA=/data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"

  mongodb:
    image: mongo:4.4.2
    mem_limit: 200m
    ports:
      - "27017:27017"
    command: mongod
    healthcheck:
      test: "mongo --eval 'db.stats().ok'"
      interval: 5s
      timeout: 2s
      retries: 60

  eureka:
    build: eureka-service
    container_name: eureka
    mem_limit: 200m
    ports:
      - "8761:8761"

  gateway:
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    build: gateway-service
    mem_limit: 200m
    ports:
      - "8443:8443"

  auth-server:
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    build: auth-service
    mem_limit: 200m
    healthcheck:
      test: ["CMD", "curl", "-fs", "http://localhost:9999/actuator/health"]
      interval: 5s
      timeout: 2s
      retries: 60

volumes:
  postgres:
  pgadmin: